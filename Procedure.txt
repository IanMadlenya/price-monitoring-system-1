1. Start user-service.

2. Create user-service.
    Show MySQL (user)

3. Subscribe category.
    Show MySQL (user_category)

4. UnSubscribe category.
    Show MySQL (user_category)

5. Start category-crawler.
    Show MySQL (category)

7. Stop category-crawler.

8. Start product-crawler.
    Show RabbitMQ: queues (q_product_p(n), q_product_log)

    Show mongodb (db.productLog.find().pretty())
    Show mongodb (db.productLog.count())
9. Start product-log-service.
    Show q_product_log
    Show q_product_p(n)
    Show mongodb (db.productLog.find().pretty())


10. Start Price-monitoring-service.
    Show q_product_log
    Show q_product_p(n)
    Show q_discount_product_p(n)

11. Start instant-notification-service.
    Show q_discount_product_p(n)

12. Query deals.

13. Show email.

14. Show localhost:9004/health /metrics /info /env.

===================================================
Pre:

1. Start MongoDB & RabbitMQ.
    > docker-compose up

2. Connect to MongoDB at docker:
> docker exec -it 6da bash
# mongo
> show dbs
> use test
> show collections
> db.productLog.find().pretty()
> db.productLog.deleteMany({})
> db.productLog.find().sort({"create_time": -1})
> db.productLog.count()

3. Check Redis key value:
> redis-cli ping
> brew services start redis

> redis-cli
# config get databases  --- show all databases
# select <db index>     --- use db
# info keyspace     --- show key counts
# keys *        --- show all keys
# mget <key>    --- show value of key

# flushall      --- delete in all dbs
# flushdb       --- delete all in db
# set key1 "hello"  --- set key value
# del key1 key2     --- delete keys

4. Open RabbitMQ UI
http://localhost:15672/
guest/guest




